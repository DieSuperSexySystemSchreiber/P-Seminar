/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package math.platform;

import javax.swing.JOptionPane;

/**
 *
 * @author David Müller
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        plus = new javax.swing.JCheckBox();
        minus = new javax.swing.JCheckBox();
        mal = new javax.swing.JCheckBox();
        geteilt = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        klammertiefe = new javax.swing.JComboBox();
        buttonGenerieren = new javax.swing.JButton();
        operanten = new javax.swing.JLabel();
        operantenzahl = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        stellen = new javax.swing.JComboBox();
        positiv = new javax.swing.JCheckBox();
        brueche = new javax.swing.JCheckBox();

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lernplattform | Mathematik");
        setFocusable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Aufgabeneinstellungen");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Rechenoperationen:");

        plus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        plus.setText("Plus ( + )");

        minus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        minus.setText("Minus ( - )");

        mal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mal.setText("Mal ( * )");

        geteilt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        geteilt.setText("Geteilt ( / )");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Klammertiefe:");

        klammertiefe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        klammertiefe.setMaximumRowCount(5);
        klammertiefe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        klammertiefe.setToolTipText("");

        buttonGenerieren.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        buttonGenerieren.setText("Generieren...");
        buttonGenerieren.setToolTipText("");
        buttonGenerieren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenerierenActionPerformed(evt);
            }
        });

        operanten.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        operanten.setText("Operantenanzahl:");

        operantenzahl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        operantenzahl.setMaximumRowCount(10);
        operantenzahl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        operantenzahl.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("maximale Stellen:");

        stellen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        stellen.setMaximumRowCount(5);
        stellen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        stellen.setToolTipText("");

        positiv.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        positiv.setText("nur positive Zahlen");
        positiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positivActionPerformed(evt);
            }
        });

        brueche.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        brueche.setText("mit Brüchen");
        brueche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bruecheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(minus)
                                    .addComponent(plus))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mal)
                                    .addComponent(geteilt)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(stellen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(klammertiefe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(operanten)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(operantenzahl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(88, 88, 88))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(positiv)
                                .addGap(18, 18, 18)
                                .addComponent(brueche)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonGenerieren)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(plus)
                            .addComponent(mal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(geteilt)
                            .addComponent(minus))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(klammertiefe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(operanten)
                            .addComponent(operantenzahl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(stellen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(positiv)
                    .addComponent(brueche))
                .addGap(18, 18, 18)
                .addComponent(buttonGenerieren)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void positivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positivActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positivActionPerformed

    private void bruecheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bruecheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bruecheActionPerformed

    private void buttonGenerierenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenerierenActionPerformed
        boolean rzPlus = plus.isSelected();
        boolean rzMinus = minus.isSelected();
        boolean rzMal = mal.isSelected();
        boolean rzGeteilt = geteilt.isSelected();
        int klammert = klammertiefe.getSelectedIndex() + 1;
        int ersetzungen = operantenzahl.getSelectedIndex() + 1;
        int maxStellen = stellen.getSelectedIndex() + 1;
        boolean nurPositiv = positiv.isSelected();
        boolean bruch = brueche.isSelected();
        
        System.out.println("Der Term mit der Klammertiefe "+klammert+" besteht aus "+ersetzungen+" Ersetzungen. Die Zahlen dürfen maximal "+maxStellen+" Stellen lang sein.");
        JOptionPane.showMessageDialog(this, "Der Term mit der Klammertiefe "+klammert+" besteht aus "+ersetzungen+" Ersetzungen. Die Zahlen dürfen maximal "+maxStellen+" Stellen lang sein.", "Ausgabe", JOptionPane.INFORMATION_MESSAGE);
        //class.generiereTerm(rzPlus, rzminus, rzMal, rzGeteilt, klammert, ersetzungen, maxStellen, nurPositiv, bruch)
    }//GEN-LAST:event_buttonGenerierenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox brueche;
    private javax.swing.JButton buttonGenerieren;
    private javax.swing.JCheckBox geteilt;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JComboBox klammertiefe;
    private javax.swing.JCheckBox mal;
    private javax.swing.JCheckBox minus;
    private javax.swing.JLabel operanten;
    private javax.swing.JComboBox operantenzahl;
    private javax.swing.JCheckBox plus;
    private javax.swing.JCheckBox positiv;
    private javax.swing.JComboBox stellen;
    // End of variables declaration//GEN-END:variables
}

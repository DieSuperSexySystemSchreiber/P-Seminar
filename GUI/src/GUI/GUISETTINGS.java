/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import javax.swing.JOptionPane;

/**
 *
 * @author David Müller
 */
public class GUISETTINGS extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUISETTINGS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        addCheckbox = new javax.swing.JCheckBox();
        subtractCheckbox = new javax.swing.JCheckBox();
        multiplyCheckbox = new javax.swing.JCheckBox();
        divideCheckbox = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        bracketDephtDropdown = new javax.swing.JComboBox();
        generateButton = new javax.swing.JButton();
        operanten = new javax.swing.JLabel();
        substitutionDropdown = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        digitsDropdown = new javax.swing.JComboBox();
        positiveCheckbox = new javax.swing.JCheckBox();
        fractionCheckbox = new javax.swing.JCheckBox();

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lernplattform | Mathematik");
        setFocusable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Aufgabeneinstellungen");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Rechenoperationen:");

        addCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addCheckbox.setText("Plus ( + )");

        subtractCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        subtractCheckbox.setText("Minus ( - )");

        multiplyCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        multiplyCheckbox.setText("Mal ( * )");

        divideCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        divideCheckbox.setText("Geteilt ( / )");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Klammertiefe:");

        bracketDephtDropdown.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bracketDephtDropdown.setMaximumRowCount(5);
        bracketDephtDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        bracketDephtDropdown.setToolTipText("");

        generateButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        generateButton.setText("Generieren...");
        generateButton.setToolTipText("");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        operanten.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        operanten.setText("Operantenanzahl:");

        substitutionDropdown.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        substitutionDropdown.setMaximumRowCount(10);
        substitutionDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        substitutionDropdown.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("maximale Stellen:");

        digitsDropdown.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        digitsDropdown.setMaximumRowCount(5);
        digitsDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        digitsDropdown.setToolTipText("");

        positiveCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        positiveCheckbox.setText("nur positive Zahlen");
        positiveCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positiveCheckboxActionPerformed(evt);
            }
        });

        fractionCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fractionCheckbox.setText("mit Brüchen");
        fractionCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fractionCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(subtractCheckbox)
                                    .addComponent(addCheckbox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(multiplyCheckbox)
                                    .addComponent(divideCheckbox)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(digitsDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bracketDephtDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(operanten)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(substitutionDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(88, 88, 88))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(positiveCheckbox)
                                .addGap(18, 18, 18)
                                .addComponent(fractionCheckbox)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(addCheckbox)
                            .addComponent(multiplyCheckbox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(divideCheckbox)
                            .addComponent(subtractCheckbox))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(bracketDephtDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(operanten)
                            .addComponent(substitutionDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(digitsDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(positiveCheckbox)
                    .addComponent(fractionCheckbox))
                .addGap(18, 18, 18)
                .addComponent(generateButton)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void positiveCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positiveCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positiveCheckboxActionPerformed

    private void fractionCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fractionCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fractionCheckboxActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        boolean aoAddition = addCheckbox.isSelected();
        boolean aoSubtraction = subtractCheckbox.isSelected();
        boolean aoMultiplication = multiplyCheckbox.isSelected();
        boolean aoDivision = divideCheckbox.isSelected();
        int bracketDepht = bracketDephtDropdown.getSelectedIndex() + 1;
        int Substitutions = substitutionDropdown.getSelectedIndex() + 1;
        int Digits = digitsDropdown.getSelectedIndex() + 1;
        boolean justPositive = positiveCheckbox.isSelected();
        boolean withFraction = fractionCheckbox.isSelected();
        
        //Nur vorläufig:
        System.out.println("Der Term mit der Klammertiefe "+bracketDepht+" besteht aus "+Substitutions+" Ersetzungen. Die Zahlen dürfen maximal "+Digits+" Stellen lang sein.");
        JOptionPane.showMessageDialog(this, "Der Term mit der Klammertiefe "+bracketDepht+" besteht aus "+Substitutions+" Ersetzungen. Die Zahlen dürfen maximal "+Digits+" Stellen lang sein.", "Ausgabe", JOptionPane.INFORMATION_MESSAGE);
        //class.generiereTerm(aoAddition, aoSubtraction, aoMultiplication, aoDivision, bracketDepht, Substitutions, Digits, justPositive, withFraction)
    }//GEN-LAST:event_generateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUISETTINGS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUISETTINGS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUISETTINGS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUISETTINGS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUISETTINGS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addCheckbox;
    private javax.swing.JComboBox bracketDephtDropdown;
    private javax.swing.JComboBox digitsDropdown;
    private javax.swing.JCheckBox divideCheckbox;
    private javax.swing.JCheckBox fractionCheckbox;
    private javax.swing.JButton generateButton;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JCheckBox multiplyCheckbox;
    private javax.swing.JLabel operanten;
    private javax.swing.JCheckBox positiveCheckbox;
    private javax.swing.JComboBox substitutionDropdown;
    private javax.swing.JCheckBox subtractCheckbox;
    // End of variables declaration//GEN-END:variables
}

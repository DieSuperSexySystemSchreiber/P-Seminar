/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.*;
import static java.lang.Math.pow;
import javax.swing.JOptionPane;
import java.io.*;

/**
 *
 * @author David Müller
 */
public class GUICONFIG extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    boolean noFaults = true;
    boolean noFaults2 = true;
    
    public GUICONFIG() {
        initComponents();
        operationError.setText("");
        bracketDephtError.setText("");
        substitutionsError.setText("");
        digitsError.setText("");
        decimalError.setText("");
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        digitsDropdown1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        operanten = new javax.swing.JLabel();
        substitutionDropdown = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        digitsDropdown = new javax.swing.JComboBox();
        addCheckbox = new javax.swing.JCheckBox();
        positiveCheckbox = new javax.swing.JCheckBox();
        subtractCheckbox = new javax.swing.JCheckBox();
        multiplyCheckbox = new javax.swing.JCheckBox();
        generateCancelButton = new javax.swing.JButton();
        divideCheckbox = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        bracketDephtDropdown = new javax.swing.JComboBox();
        generateButton = new javax.swing.JButton();
        bracketDephtError = new javax.swing.JLabel();
        substitutionsError = new javax.swing.JLabel();
        operationError = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        decimalPlacesDropdown = new javax.swing.JComboBox();
        digitsError = new javax.swing.JLabel();
        decimalError = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        digitsDropdown1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        digitsDropdown1.setMaximumRowCount(5);
        digitsDropdown1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        digitsDropdown1.setToolTipText("");

        setTitle("Einstellungen - Übung");
        setFocusable(false);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Standart-Einstellungen");

        operanten.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        operanten.setText("Operantenanzahl:");
        operanten.setToolTipText("Anzahl der Rechenzeichen in einer Rechnung");

        substitutionDropdown.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        substitutionDropdown.setMaximumRowCount(10);
        substitutionDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        substitutionDropdown.setToolTipText("Anzahl der Rechenzeichen in einer Rechnung");
        substitutionDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bracketDephtOrSubstitutionDropdownActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("maximale Stellen:");
        jLabel13.setToolTipText("max. Stellen der verwendeten Zahlen inkl. Dezimalstellen");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Rechenoperationen:");
        jLabel7.setToolTipText("Ein Haken ermöglicht diese Rechenart in den Aufgaben");

        digitsDropdown.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        digitsDropdown.setMaximumRowCount(7);
        digitsDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7" }));
        digitsDropdown.setToolTipText("max. Stellen der verwendeten Zahlen inkl. Dezimalstellen");
        digitsDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                digitsDropdownOrDecimalPlacesDropdownActionPerformed(evt);
            }
        });

        addCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addCheckbox.setText("Plus ( + )");
        addCheckbox.setToolTipText("Ein Haken ermöglicht diese Rechenart in den Aufgaben");

        positiveCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        positiveCheckbox.setText("nur positive Zahlen");

        subtractCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        subtractCheckbox.setText("Minus ( - )");
        subtractCheckbox.setToolTipText("Ein Haken ermöglicht diese Rechenart in den Aufgaben");

        multiplyCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        multiplyCheckbox.setText("Mal ( * )");
        multiplyCheckbox.setToolTipText("Ein Haken ermöglicht diese Rechenart in den Aufgaben");

        generateCancelButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        generateCancelButton.setText("Abbrechen");
        generateCancelButton.setToolTipText("Schließt dieses Fenster");
        generateCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateCancelButtonActionPerformed(evt);
            }
        });

        divideCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        divideCheckbox.setText("Geteilt ( / )");
        divideCheckbox.setToolTipText("Ein Haken ermöglicht diese Rechenart in den Aufgaben");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Klammertiefe:");
        jLabel8.setToolTipText("Umso höher die Zahl, umso länger der Term ");

        bracketDephtDropdown.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bracketDephtDropdown.setMaximumRowCount(10);
        bracketDephtDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        bracketDephtDropdown.setToolTipText("Umso höher die Zahl, umso länger der Term ");
        bracketDephtDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bracketDephtOrSubstitutionDropdownActionPerformed(evt);
            }
        });

        generateButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        generateButton.setText("OK");
        generateButton.setToolTipText("");
        generateButton.setMaximumSize(new java.awt.Dimension(93, 23));
        generateButton.setMinimumSize(new java.awt.Dimension(93, 23));
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        bracketDephtError.setForeground(new java.awt.Color(255, 0, 0));
        bracketDephtError.setText("bracketDephtError");

        substitutionsError.setForeground(new java.awt.Color(255, 0, 0));
        substitutionsError.setText("substitutionsError");

        operationError.setForeground(new java.awt.Color(255, 0, 0));
        operationError.setText("operationError");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Dezimalstellen:");
        jLabel14.setToolTipText("Anzahl der Stellen nach dem Komma");

        decimalPlacesDropdown.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        decimalPlacesDropdown.setMaximumRowCount(7);
        decimalPlacesDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6" }));
        decimalPlacesDropdown.setToolTipText("Anzahl der Stellen nach dem Komma");
        decimalPlacesDropdown.setPreferredSize(new java.awt.Dimension(40, 21));
        decimalPlacesDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                digitsDropdownOrDecimalPlacesDropdownActionPerformed(evt);
            }
        });

        digitsError.setForeground(new java.awt.Color(255, 0, 0));
        digitsError.setText("digitsError");

        decimalError.setForeground(new java.awt.Color(255, 0, 0));
        decimalError.setText("decimalError");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(operanten)
                            .addComponent(positiveCheckbox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(146, 146, 146))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generateCancelButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(operationError)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(decimalPlacesDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(digitsDropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bracketDephtDropdown, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(substitutionDropdown, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bracketDephtError)
                                    .addComponent(substitutionsError)
                                    .addComponent(digitsError)
                                    .addComponent(decimalError))))
                        .addContainerGap(236, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(multiplyCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(divideCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(subtractCheckbox))
                            .addComponent(jLabel14))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(multiplyCheckbox)
                    .addComponent(divideCheckbox)
                    .addComponent(addCheckbox)
                    .addComponent(subtractCheckbox))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(operationError)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(bracketDephtDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bracketDephtError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(operanten)
                            .addComponent(substitutionDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(substitutionsError))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(digitsDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(digitsError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(decimalPlacesDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decimalError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(positiveCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateCancelButton)
                    .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bracketDephtOrSubstitutionDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bracketDephtOrSubstitutionDropdownActionPerformed
        int subs = Integer.parseInt(substitutionDropdown.getSelectedItem().toString());
        int brackets = Integer.parseInt(bracketDephtDropdown.getSelectedItem().toString());
        
        int minBrackets = (int) Math.ceil(Math.log(subs) / Math.log(2) + 1);
        int maxBrackets = subs;
        
        int minSubs = brackets;
        int maxSubs = (int) pow(2, brackets - 1);
        
        if(brackets < minBrackets || subs > maxSubs){
            bracketDephtError.setText("Mindestklammertiefe: " + minBrackets);
            substitutionsError.setText("Maximaloperanten: " + maxSubs);
            noFaults = false;
        }
        else if(brackets > maxBrackets || subs < minSubs){
            bracketDephtError.setText("Maximalklammertiefe: " + maxBrackets);
            substitutionsError.setText("Mindestoperanten: " + minSubs);
            noFaults = false;
        }
        else{
            bracketDephtError.setText("");
            substitutionsError.setText("");
            noFaults = true;
        }
    }//GEN-LAST:event_bracketDephtOrSubstitutionDropdownActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        boolean aoAddition = addCheckbox.isSelected();
        boolean aoSubtraction = subtractCheckbox.isSelected();
        boolean aoMultiplication = multiplyCheckbox.isSelected();
        boolean aoDivision = divideCheckbox.isSelected();
        int bracketDepht = bracketDephtDropdown.getSelectedIndex() + 1;
        int Substitutions = substitutionDropdown.getSelectedIndex() + 1;
        int Digits = digitsDropdown.getSelectedIndex() + 1;
        int decimalPlaces = decimalPlacesDropdown.getSelectedIndex();
        boolean justPositive = positiveCheckbox.isSelected();
//        boolean withFraction = fractionCheckbox.isSelected();
        
        if(!aoAddition && !aoSubtraction && !aoMultiplication && !aoDivision){
            operationError.setText("Keine Rechenoperation(en) ausgewählt!");
        }
        else{
            operationError.setText("");
            if(noFaults && noFaults2){
                this.setVisible(false);
                if(isFileAvailable()){
                }
                writeFile();
            }
        }
    }//GEN-LAST:event_generateButtonActionPerformed

    
    
    
    private void generateCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateCancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_generateCancelButtonActionPerformed

    private void digitsDropdownOrDecimalPlacesDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_digitsDropdownOrDecimalPlacesDropdownActionPerformed
        int digi = Integer.parseInt(digitsDropdown.getSelectedItem().toString());
        int deci = Integer.parseInt(decimalPlacesDropdown.getSelectedItem().toString());
        
        int minDigi = deci + 1;
        
        int maxDeci = digi - 1;
        
        if(digi < minDigi || deci > maxDeci){
            digitsError.setText("Mindeststellen: " + minDigi);
            decimalError.setText("Maximale Dezimalstellen: " + maxDeci);
            noFaults2 = false;
        }
        else{
            digitsError.setText("");
            decimalError.setText("");
            noFaults2 = true;
        }
    }//GEN-LAST:event_digitsDropdownOrDecimalPlacesDropdownActionPerformed

    
    
    public boolean isFileAvailable() {

        System.out.println("\nisFileAvailable Methode wird aufgerufen: ");
       
        File f = new File("config.txt");
        if (f.exists()) {
            System.out.println("true");

            return true;
           
        }else{
            System.out.println("false");
            
            return false;
        }

    }
   
    public void writeFile(){
       
        System.out.println("\nwriteFile Methode wird aufgerufen: ");
       
        try {
                BufferedWriter writer = new BufferedWriter(new FileWriter("config.txt"));
                writer.write("123 \n");
                writer.write("456 \n");
                writer.write("789 \n");
               
               
                writer.close();
               
            } catch (IOException e) {

                e.printStackTrace();
            }
    }
   
    public void loadFile(){
       
        System.out.println("\nloadFile Methode wird aufgerufen: ");
       
        try{
            BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream("config.txt")));
            String zeile = "";
           
           
            while( (zeile = reader.readLine()) != null){
                System.out.println(zeile);
            }
           
        }catch(IOException ex){
            ex.printStackTrace();
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUISETTINGS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUISETTINGS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUISETTINGS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUISETTINGS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUICONFIG().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addCheckbox;
    private javax.swing.JComboBox bracketDephtDropdown;
    private javax.swing.JLabel bracketDephtError;
    private javax.swing.JLabel decimalError;
    private javax.swing.JComboBox decimalPlacesDropdown;
    private javax.swing.JComboBox digitsDropdown;
    private javax.swing.JComboBox digitsDropdown1;
    private javax.swing.JLabel digitsError;
    private javax.swing.JCheckBox divideCheckbox;
    private javax.swing.JButton generateButton;
    private javax.swing.JButton generateCancelButton;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JCheckBox multiplyCheckbox;
    private javax.swing.JLabel operanten;
    private javax.swing.JLabel operationError;
    private javax.swing.JCheckBox positiveCheckbox;
    private javax.swing.JComboBox substitutionDropdown;
    private javax.swing.JLabel substitutionsError;
    private javax.swing.JCheckBox subtractCheckbox;
    // End of variables declaration//GEN-END:variables
}
